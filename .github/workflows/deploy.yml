name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  ## ------------------------
  ## üîç CI: Lint & Build
  ## ------------------------
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [welcome-portal-app-web-ui, welcome-portal-app-mngr]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: |
          cd ${{ matrix.project }}
          npm ci
        env:
          BDB_TOKEN: ${{ secrets.BDB_TOKEN }}

      - name: Lint
        run: |
          cd ${{ matrix.project }}
          npm run lint

      - name: Build
        run: |
          cd ${{ matrix.project }}
          npm run build

  ## ------------------------
  ## üöÄ CD: Deploy IaC
  ## ------------------------

  cd-iac:
    needs: ci
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::006217752323:role/rolGitHub
          aws-region: us-east-1
          audience: "sts.amazonaws.com"

  ## ------------------------
  ## üöÄ CD: Deploy Backend
  ## ------------------------
  # cd-backend:
  #   needs: ci
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '22'

  #     - name: Install backend dependencies
  #       run: |
  #         cd backend
  #         npm ci

  #     - name: Build backend
  #       run: |
  #         cd backend
  #         npm run build

  #     - name: Package backend
  #       run: |
  #         cd backend
  #         mkdir lambda
  #         cp -r dist/* lambda/
  #         cp package.json lambda/
  #         cd lambda
  #         npm install --only=prod
  #         zip -r ../../lambda.zip .

  #     - name: Deploy to AWS Lambda
  #       run: |
  #         aws lambda update-function-code \
  #           --function-name ${{ secrets.AWS_LAMBDA_FUNCTION_NAME }} \
  #           --zip-file fileb://lambda.zip \
  #           --region ${{ secrets.AWS_REGION }}
  #       env:
  #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  # ## ------------------------
  # ## üöÄ CD: Deploy Frontend
  # ## ------------------------
  # cd-frontend:
  #   needs: ci
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '22'

  #     - name: Install frontend dependencies
  #       run: |
  #         cd frontend
  #         npm ci

  #     - name: Build frontend
  #       run: |
  #         cd frontend
  #         npm run build && npm run export

  #     - name: Deploy to S3
  #       run: |
  #         aws s3 sync frontend/out s3://${{ secrets.S3_BUCKET_NAME }} --delete
  #       env:
  #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         AWS_REGION: ${{ secrets.AWS_REGION }}
